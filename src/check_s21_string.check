#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include "s21_string.h"
#include "s21_sprintf.h"

#test memmove_1
char dest[] = "123";
char str1[] = "abc";
size_t n = 3;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_2
char dest[] = "123";
char str1[] = "abc";
size_t n = 2;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_3
char dest[] = "123456";
char str1[] = "abc";
size_t n = 3;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_4
char dest[] = "lolkek";
size_t n = 3;
ck_assert_ptr_eq(memmove(&dest[2], &dest[0], n), s21_memmove(&dest[2], &dest[0], n));

#test memmove_5
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_6
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_7
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_8
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_9
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_10
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_11
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_12
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
size_t n = 3;
memmove(str1, str2, n);
s21_memmove(str3, str2, n);
ck_assert_str_eq(str1, str3);

#test memmove_13
char str1[9] = "abc";
char str2[] = "";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_14
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_15
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_16
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_17
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
size_t n = 0;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_18
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
size_t n = 0;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_19
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
size_t n = 3;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_20
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_21
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "ab\0c";
size_t n = 3;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_22
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_23
char str1[9] = "";
char str2[] = "";
char str3[9] = "";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_24
char str1[] = " ";
char str2[] = " ";
char str3[] = " ";
size_t n = 0;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_25
char str1[] = "abcdefgh123";
char str2[] = "abcde";
char str3[] = "abcdefgh123";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_26
char str1[] = "abcdefgh123";
char str2[] = "abcde";
char str3[] = "abcdefgh123";
size_t n = 1;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_27
char str1[7] = "a";
char str2[8] = "abctu6";
char str3[7] = "a";
size_t n = 4;
ck_assert_str_eq(memmove(str1, str2, n), s21_memmove(str3, str2, n));

#test memmove_28
char str1[7] = "a";
char str2[8] = "abctu6";
char str3[7] = "a";
size_t n = 2;
ck_assert_str_eq(memmove(&str1[4], &str2[2], n), s21_memmove(&str3[4], &str2[2], n));

#test memmove_29
unsigned char str1[15]="1234567890";
unsigned char str2[15]="1234567890";
ck_assert_str_eq(memmove(&str1[11], &str1[3], 3), s21_memmove(&str2[11], &str2[3], 3));

#test memmove_30
char str1[] = "1234567890";
char str2[] = "1234567890";
ck_assert_str_eq(memmove(&str1[4], &str2[3], 3), s21_memmove(&str1[4], &str2[3], 3));

#test memchr_1
char str1[] = "abc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_2
char str1[] = "abc";
int c = 'b';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_3
char str1[] = "abc";
int c = 'c';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_4
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_5
char str1[] = "abc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_6
char str1[] = "abc";
int c = 'b';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_7
char str1[] = "abc";
int c = 'c';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_8
char str1[] = "abc";
int c = 'a';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_9
char str1[] = "abc";
int c = 'b';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_10
char str1[] = "abc";
int c = 'c';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_11
char str1[] = "abc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_12
char str1[] = "abc";
int c = 'a';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_13
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_14
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_15
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_16
char str1[] = "abc";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_17
char str1[] = "abc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_18
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_19
char str1[] = "";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_20
char str1[] = "";
int c = '\0';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_21
char str1[] = " ";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_22
char str1[] = "abcabc";
int c = 'b';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_23
char str1[] = "abcabc";
int c = 'c';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_24
char str1[] = "abcabc";
int c = 'd';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_25
char str1[] = "abcabc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_26
char str1[] = "abcabc";
int c = 'b';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_27
char str1[] = "abcabc";
int c = 'c';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_28
char str1[] = "abcabc";
int c = 'a';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_29
char str1[] = "abcabc";
int c = 'b';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_30
char str1[] = "abcabc";
int c = 'c';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_31
char str1[] = "abcabc";
int c = 'a';
size_t n = 5;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_32
char str1[] = "abcabc";
int c = 'a';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_33
char str1[] = "abcabc";
int c = 'd';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_34
char str1[] = "abcabc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_35
char str1[] = "abcabc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_36
char str1[] = "abcabc";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_37
char str1[] = "abcabc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_38
char str1[] = "abcabc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_39
char str1[] = "abcabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_40
char str1[] = "abc\nabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_41
char str1[] = "abc\0abc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_42
char str1[] = "\0abcabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_43
char str1[] = "abcabc\0";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memcmp_1
char str1[] = "abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_2
char str1[] = "Abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_3
char str1[] = "abc";
char str2[] = "Abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_4
char str1[] = "abC";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_5
char str1[] = "abc";
char str2[] = "abC";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_6
char str1[] = "ABC";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_7
char str1[] = "abc";
char str2[] = "ABC";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_8
char str1[] = "a b c";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_9
char str1[] = "abc";
char str2[] = "a b c";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_10
char str1[] = "";
char str2[] = "abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_11
char str1[] = "abc";
char str2[] = "";
int n = 1;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_12
char str1[] = " ";
char str2[] = "abc";
int n = 1;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_13
char str1[] = "abc";
char str2[] = " ";
int n = 2;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_14
char str1[] = "9087";
char str2[] = "657";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_15
char str1[] = "";
char str2[] = "";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_16
char str1[] = " ";
char str2[] = " ";
int n = 2;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_17
char str1[] = "abc ";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_18
char str1[] = "abc";
char str2[] = "abc ";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_19
char str1[] = " abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_20
char str1[] = "abc";
char str2[] = " abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_21
char str1[] = "123";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_22
char str1[] = "123";
char str2[] = "321";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_23
char str1[] = "321";
char str2[] = "321";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_24
char str1[] = "321";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_25
char str1[] = "1234";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_26
char str1[] = "132";
char str2[] = "1234";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_27
char str1[] = "abcd";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_28
char str1[] = "abc";
char str2[] = "abcd";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_29
char str1[] = "12ab";
char str2[] = "12ab";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_30
char str1[] = "ab12";
char str2[] = "12ab";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_31
char str1[] = "abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_32
char str1[] = "Abc";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_33
char str1[] = "abc";
char str2[] = "Abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_34
char str1[] = "abC";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_35
char str1[] = "abc";
char str2[] = "abC";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_36
char str1[] = "ABC";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_37
char str1[] = "abc";
char str2[] = "ABC";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_38
char str1[] = "a b c";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_39
char str1[] = "abc";
char str2[] = "a b c";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_40
char str1[] = "abc";
char str2[] = " abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_41
char str1[] = "123";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_42
char str1[] = "123";
char str2[] = "321";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_43
char str1[] = "321";
char str2[] = "321";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_44
char str1[] = "321";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_45
char str1[] = "1234";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_46
char str1[] = "132";
char str2[] = "1234";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_47
char str1[] = "abcd";
char str2[] = "abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_48
char str1[] = "abc";
char str2[] = "abcd";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_49
char str1[] = "12ab";
char str2[] = "12ab";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_50
char str1[] = "ab12";
char str2[] = "12ab";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memset_1
char str1[] = "1234567890";
int c = '1';
size_t n = 10;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_2
char str1[] = "obama";
int c = 'e';
size_t n = 1;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_3
char str1[] = "14785";
int c = 'e';
size_t n = 4;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_4
char str1[] = "shrek=love";
int c = '*';
size_t n = 5;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_5
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = '2';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_6
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = 'a';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_7
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = '2';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_8
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = 'a';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_9
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = '2';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_10
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = 'a';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_11
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = '2';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_12
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_13
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = '2';
int n = 7;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_14
char str1[] = "abcdefghij";
char str2[] = "abcdefghij";
int c = 'a';
int n = 3;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_15
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = '2';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_16
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = 'a';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_17
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = '2';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_18
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = 'a';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_19
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = '2';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_20
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = 'a';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_21
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = '2';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_22
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_23
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = '2';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_24
char str1[] = "1234567890";
char str2[] = "1234567890";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_25
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = '2';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_26
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = 'a';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_27
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = '2';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_28
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = 'a';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_29
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = '2';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_30
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = 'a';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_31
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = '2';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_32
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_33
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = '2';
int n = 7;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_34
char str1[] = "abcde67890";
char str2[] = "abcde67890";
int c = 'a';
int n = 7;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_35
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = '2';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_36
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = 'a';
int n = 10;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_37
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = '2';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_38
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = 'a';
int n = 5;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_39
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = '2';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_40
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = 'a';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_41
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = '2';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_42
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_43
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = '2';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_44
char str1[] = ")(*&^UTYfghjkliuy7oi6";
char str2[] = ")(*&^UTYfghjkliuy7oi6";
int c = 'a';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_45
char str1[] = "";
char str2[] = "";
int c = 'a';
int n = 0;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_46
char str1[] = " ";
char str2[] = " ";
int c = 'a';
int n = 1;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_47
char str1[] = ")(*&^UTYfgh\0jkliuy7oi6";
char str2[] = ")(*&^UTYfgh\0jkliuy7oi6";
int c = 'a';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_48
char str1[] = ")(*&^UTYfgh\njkliuy7oi6";
char str2[] = ")(*&^UTYfgh\njkliuy7oi6";
int c = 'a';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_49
char str1[] = ")(*&^UTYfghjkliuy7oi6\0";
char str2[] = ")(*&^UTYfghjkliuy7oi6\0";
int c = 'a';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memset_50
char str1[] = "\0)(*&^UTYfgh\0jkliuy7oi6";
char str2[] = "\0)(*&^UTYfgh\0jkliuy7oi6";
int c = 'a';
int n = 11;
ck_assert_str_eq(memset(str1, c, n), s21_memset(str2, c, n));

#test memcpy_1
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
size_t n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_2
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_3
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_4
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_5
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_6
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 4;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_7
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 4;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_8
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
int n = 3;
memcpy(str1, str2, n);
s21_memcpy(str3, str2, n);
ck_assert_str_eq(str1, str3);

#test memcpy_9
char str1[9] = "abc";
char str2[] = "";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_10
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_11
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_12
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
int n = 4;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_13
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 0;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_14
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 0;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_15
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
int n = 0;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_16
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 4;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_17
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "ab\0c";
int n = 3;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_18
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_19
char str1[9] = "";
char str2[] = "";
char str3[9] = "";
int n = 1;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test memcpy_20
char str1[9] = " ";
char str2[] = " ";
char str3[9] = " ";
int n = 0;
ck_assert_str_eq(memcpy(str1, str2, n), s21_memcpy(str3, str2, n));

#test strncat_1
char dest[10] = "bidon";
char src[10] = "joe";
size_t n = 3;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_2
char dest[10] = "4:20";
char src[10] = "4:19";
size_t n = 3;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_3
char dest[50] = "pants";
char src[20] = "za 40 griven";
size_t n = 5;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_4
char dest[30] = "435564536";
char src[30] = "5195195561";
size_t n = 8;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_5
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_6
char str1[9] = "ab\nc";
char str2[9] = "ab\nc";
char str3[] = "def";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_7
char str1[9] = "ab\0c";
char str2[9] = "ab\0c";
char str3[] = "def";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_8
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "de\0f";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_9
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "de\nf";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_10
char str1[9] = "ab\0c";
char str2[9] = "ab\0c";
char str3[] = "def";
int n = 4;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_11
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "de\0f";
int n = 4;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_12
char str1[9] = "";
char str2[9] = "";
char str3[] = "def";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_13
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "";
int n = 1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_14
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def";
int n = 3;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_15
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def";
int n = 3;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_16
char str1[9] = "ab\nc";
char str2[9] = "ab\nc";
char str3[] = "def";
int n = 3;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_17
char str1[9] = "ab\0c";
char str2[9] = "ab\0c";
char str3[] = "def";
int n = 0;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_18
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "de\0f";
int n = 0;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_19
char str1[9] = "ab\0c";
char str2[9] = "ab\0c";
char str3[] = "def";
int n = -4;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_20
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "de\0f";
int n = -4;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_21
char str1[9] = "";
char str2[9] = "";
char str3[] = "def";
int n = -1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_22
char str1[9] = "";
char str2[9] = "";
char str3[] = "";
int n = -1;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strncat_23
char str1[9] = " ";
char str2[9] = " ";
char str3[] = " ";
int n = 0;
ck_assert_str_eq(strncat(str1, str3, n), s21_strncat(str2, str3, n));

#test strcmp_1
char str1[] = "12345";
char str2[] = "12345";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_2
char str1[] = "zrada";
char str2[] = "peremoga";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_3
char str1[] = "8888";
char str2[] = "XX";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_4
char str1[] = "1234567890";
char str2[] = "1234567809";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_5
char str1[] = "abc";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_6
char str1[] = "Abc";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_7
char str1[] = "abc";
char str2[] = "Abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_8
char str1[] = "abC";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_9
char str1[] = "abc";
char str2[] = "abC";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_10
char str1[] = "ABC";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_11
char str1[] = "abc";
char str2[] = "ABC";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_12
char str1[] = "a b c";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_13
char str1[] = "abc";
char str2[] = "a b c";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_14
char str1[] = "";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_15
char str1[] = "abc";
char str2[] = "";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_16
char str1[] = " ";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_17
char str1[] = "abc";
char str2[] = " ";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_18
char str1[] = "9087";
char str2[] = "657";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_19
char str1[] = "";
char str2[] = "";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_20
char str1[] = " ";
char str2[] = " ";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_21
char str1[] = "abc ";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_22
char str1[] = "abc";
char str2[] = "abc ";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_23
char str1[] = " abc";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_24
char str1[] = "abc";
char str2[] = " abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_25
char str1[] = "123";
char str2[] = "123";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_26
char str1[] = "123";
char str2[] = "321";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_27
char str1[] = "321";
char str2[] = "321";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_28
char str1[] = "321";
char str2[] = "123";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_29
char str1[] = "1234";
char str2[] = "123";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_30
char str1[] = "132";
char str2[] = "1234";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_31
char str1[] = "abcd";
char str2[] = "abc";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_32
char str1[] = "abc";
char str2[] = "abcd";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_33
char str1[] = "12ab";
char str2[] = "12ab";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcmp_34
char str1[9] = "ab12";
char str2[9] = "12ab";
int s21 = s21_strcmp(str1, str2);
int s00 = strcmp(str1, str2);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcpy_1
char dest[] = "ahmat sila";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_2
char dest[] = "625159151";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_3
char dest[] = "$K^G$J&^*";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_4
char dest[] = "Vechniye_deti!";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_5
char str1[9] = "abc";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_6
char str1[9] = "abc\0";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_7
char str1[9] = "abc\n";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_8
char str1[9] = "ab\0c";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_9
char str1[9] = "a\nbc";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_10
char str1[9] = "abc ";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_11
char str1[9] = " abc";
char str2[] = "def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_12
char str1[9] = "abc";
char str2[] = " def";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_13
char str1[9] = "abc";
char str2[] = "def ";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_14
char str1[9] = "abc";
char str2[] = "def00";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_15
char str1[9] = "";
char str2[] = "12\0";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_16
char str1[9] = "12\0";
char str2[] = "";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_17
char str1[9] = "32\1";
char str2[] = "";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_18
char str1[9] = "21\3c";
char str2[] = " ";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_19
char str1[9] = "1\n23";
char str2[] = "321";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_20
char str1[9] = "321";
char str2[] = "123";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_21
char str1[9] = " ";
char str2[] = " ";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_22
char str1[9] = "";
char str2[] = " ";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_23
char str1[9] = " ";
char str2[] = "";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strcpy_24
char str1[9] = "";
char str2[] = "";
ck_assert_str_eq(strcpy(str1, str2), s21_strcpy(str1, str2));

#test strncpy_1
char dest[] = "ahmat";
char src[] = "sila";
size_t n = 3;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_2
char dest[] = "6251";
char src[] = "5494";
size_t n = 2;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_3
char dest[] = "$K^G$J&^*";
char src[] = "YNYTn53636";
size_t n = 4;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_4
char dest[] = "Vechniye_";
char src[] = "deti!";
size_t n = 1;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_5
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_6
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_7
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_8
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_9
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 4;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_10
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 4;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_11
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
int n = 3;
strncpy(str1, str2, n);
s21_strncpy(str3, str2, n);
ck_assert_str_eq(str1, str3);

#test strncpy_12
char str1[9] = "abc";
char str2[] = "";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_13
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_14
char str1[9] = "abc";
char str2[] = "def";
char str3[9] = "abc";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_15
char str1[9] = "ab\nc";
char str2[] = "def";
char str3[9] = "ab\nc";
int n = 9;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_16
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 0;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_17
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 0;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_18
char str1[9] = "abc";
char str2[] = "de\nf";
char str3[9] = "abc";
int n = 7;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_19
char str1[9] = "ab\0c";
char str2[] = "def";
char str3[9] = "ab\0c";
int n = 4;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_20
char str1[9] = "abc";
char str2[] = "de\0f";
char str3[9] = "abc";
int n = 8;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_21
char str1[9] = "";
char str2[] = "def";
char str3[9] = "";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_22
char str1[9] = "";
char str2[] = "";
char str3[9] = "";
int n = 1;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncpy_23
char str1[9] = " ";
char str2[] = " ";
char str3[9] = " ";
int n = 0;
ck_assert_str_eq(strncpy(str1, str2, n), s21_strncpy(str3, str2, n));

#test strncmp_1
char str1[] = "12345";
char str2[] = "12345";
size_t n = 5;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_2
char str1[] = "zrada";
char str2[] = "peremoga";
size_t n = 4;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_3
char str1[] = "8888";
char str2[] = "XX";
size_t n = 1;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_4
char str1[] = "1234567890";
char str2[] = "1234567809";
size_t n = 3;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_5
char str1[] = "abc";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_6
char str1[] = "Abc";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_7
char str1[] = "abc";
char str2[] = "Abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_8
char str1[] = "abC";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_9
char str1[] = "abc";
char str2[] = "abC";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_10
char str1[] = "ABC";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_11
char str1[] = "abc";
char str2[] = "ABC";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_12
char str1[] = "a b c";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_13
char str1[] = "abc";
char str2[] = "a b c";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_14
char str1[] = "";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_15
char str1[] = "abc";
char str2[] = "";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_16
char str1[] = " ";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_17
char str1[] = "abc";
char str2[] = " ";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_18
char str1[] = "9087";
char str2[] = "657";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_19
char str1[] = "";
char str2[] = "";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_20
char str1[] = " ";
char str2[] = " ";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_21
char str1[] = "abc ";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_22
char str1[] = "abc";
char str2[] = "abc ";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_23
char str1[] = " abc";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_24
char str1[] = "abc";
char str2[] = " abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_25
char str1[] = "123";
char str2[] = "123";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_26
char str1[] = "123";
char str2[] = "321";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_27
char str1[] = "321";
char str2[] = "321";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_28
char str1[] = "321";
char str2[] = "123";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_29
char str1[] = "1234";
char str2[] = "123";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_30
char str1[] = "132";
char str2[] = "1234";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_31
char str1[] = "abcd";
char str2[] = "abc";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_32
char str1[] = "abc";
char str2[] = "abcd";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_33
char str1[] = "12ab";
char str2[] = "12ab";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_34
char str1[] = "ab12";
char str2[] = "12ab";
int n = 3;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_35
char str1[] = "abc";
char str2[] = "abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_36
char str1[] = "Abc";
char str2[] = "abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_37
char str1[] = "abc";
char str2[] = "Abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_38
char str1[] = "abC";
char str2[] = "abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_39
char str1[] = "abc";
char str2[] = "abC";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_40
char str1[] = "ABC";
char str2[] = "abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_41
char str1[] = "abc";
char str2[] = "ABC";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_42
char str1[] = "a b c";
char str2[] = "abc";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_43
char str1[] = "abc";
char str2[] = "a b c";
int n = 10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_44
char str1[] = "";
char str2[] = "abc";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_45
char str1[] = "abc";
char str2[] = "";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_46
char str1[] = " ";
char str2[] = "abc";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_47
char str1[] = "abc";
char str2[] = " ";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_48
char str1[] = "9087";
char str2[] = "657";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_49
char str1[] = "";
char str2[] = "";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_50
char str1[] = " ";
char str2[] = " ";
int n = -10;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_51
char str1[] = "abc ";
char str2[] = "abc";
int n = -1;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_52
char str1[] = "abc";
char str2[] = "abc ";
int n = -1;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_53
char str1[] = " abc";
char str2[] = "abc";
int n = -1;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_54
char str1[] = "abc";
char str2[] = " abc";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_55
char str1[] = "123";
char str2[] = "123";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_56
char str1[] = "123";
char str2[] = "321";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_57
char str1[] = "321";
char str2[] = "321";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_58
char str1[] = "321";
char str2[] = "123";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_59
char str1[] = "1234";
char str2[] = "123";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_60
char str1[] = "132";
char str2[] = "1234";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_61
char str1[] = "abcd";
char str2[] = "abc";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_62
char str1[] = "abc";
char str2[] = "abcd";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_63
char str1[] = "12ab";
char str2[] = "12ab";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strncmp_64
char str1[] = "ab12";
char str2[] = "12ab";
int n = 0;
int s21 = s21_strncmp(str1, str2, n);
int s00 = strncmp(str1, str2, n);
if (s21 > 1) {
    s21 = 1;
}
if (s21 < -1) {
    s21 = -1;
}
if (s00 > 1) {
    s00 = 1;
}
if (s00 < -1) {
    s00 = -1;
}
ck_assert_int_eq(s21, s00);

#test strcspn_1
char str1[] = "devkazarulem";
char str2[] = "mel";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_2
char str1[] = "01823456789";
char str2[] = "9876";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_3
char str1[] = "GHtrH^$Y$GFD";
char str2[] = "^$Y";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_4
char str1[] = "zahashihzanashih";
char str2[] = "nashih";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_5
char str1[] = "abc";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_6
char str1[] = "Abc";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_7
char str1[] = "abc";
char str2[] = "Abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_8
char str1[] = "abC";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_9
char str1[] = "abc";
char str2[] = "abC";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_10
char str1[] = "ABC";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_11
char str1[] = "abc";
char str2[] = "ABC";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_12
char str1[] = "a b c";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_13
char str1[] = "abc";
char str2[] = "a b c";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_14
char str1[] = "";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_15
char str1[] = "abc";
char str2[] = "";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_16
char str1[] = " ";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_17
char str1[] = "abc";
char str2[] = " ";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_18
char str1[] = "9087";
char str2[] = "657";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_19
char str1[] = "";
char str2[] = "";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_20
char str1[] = " ";
char str2[] = " ";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_21
char str1[] = "abc ";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_22
char str1[] = "abc";
char str2[] = "abc ";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_23
char str1[] = " abc";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_24
char str1[] = "abc";
char str2[] = " abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_25
char str1[] = "123";
char str2[] = "123";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_26
char str1[] = "123";
char str2[] = "321";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_27
char str1[] = "321";
char str2[] = "321";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_28
char str1[] = "321";
char str2[] = "123";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_29
char str1[] = "1234";
char str2[] = "123";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_30
char str1[] = "132";
char str2[] = "1234";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_31
char str1[] = "abcd";
char str2[] = "abc";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_32
char str1[] = "abc";
char str2[] = "abcd";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_33
char str1[] = "12ab";
char str2[] = "12ab";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_34
char str1[] = "ab12";
char str2[] = "12ab";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strlen_1
char str1[] = "abcde";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_2
char str1[] = "12345";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_3
char str1[] = "00000";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_4
char str1[] = ".....";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_5
char str1[] = "   ";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_6
char str1[] = "+_@$)@)(%*";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_7
char str1[] = "\n";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_8
char str1[] = " 0";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_9
char str1[] = "0 ";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_10
char str1[] = "j ";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_11
char str1[] = " k";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_12
char str1[] = "";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_13
char str1[] = "!";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_14
char str1[] = "\'";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_15
char str1[] = "\0";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_16
char str1[] = "k\0";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_17
char str1[] = " \0";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_18
char str1[] = "\0 0n";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_19
char str1[] = "\n klj";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strlen_20
char str1[] = "\n\0";
ck_assert_int_eq(strlen(str1), s21_strlen(str1));

#test strpbrk_1
char str1[] = "this is a test";
char str2[] = "this";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_2
char str1[] = "this is a test";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_3
char str1[] = "abc";
char str2[] = "ccc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_4
char str1[] = "abc123";
char str2[] = "123";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_5
char str1[] = "abglk1erw233c";
char str2[] = "321";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_6
char str1[] = "ab\nc";
char str2[] = "\n";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_7
char str1[] = "a8yuoiytu5u6rtyfkguhubc";
char str2[] = "123i6t5";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_8
char str1[] = "a77777bc";
char str2[] = "177723";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_9
char str1[] = "ab7itgkhm.,c";
char str2[] = "12hjv3";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_10
char str1[] = "ab.,c";
char str2[] = "127863";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_11
char str1[] = "abc";
char str2[] = "";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_12
char str1[] = " ";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_13
char str1[] = "abc";
char str2[] = " ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_14
char str1[] = "9087";
char str2[] = "657";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_15
char str1[] = "";
char str2[] = "";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_16
char str1[] = " ";
char str2[] = " ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_17
char str1[] = "abc ";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_18
char str1[] = "abc";
char str2[] = "abc ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_19
char str1[] = " abc";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_20
char str1[] = "abc";
char str2[] = " abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_21
char str1[] = "123";
char str2[] = "123";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_22
char str1[] = "123";
char str2[] = "321";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_23
char str1[] = "321";
char str2[] = "321";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_24
char str1[] = "321";
char str2[] = "123";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_25
char str1[] = "1234";
char str2[] = "123";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_26
char str1[] = "132";
char str2[] = "1234";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_27
char str1[] = "abcd";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_28
char str1[] = "abc";
char str2[] = "abcd";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_29
char str1[] = "12ab";
char str2[] = "12ab";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_30
char str1[] = "ab12";
char str2[] = "12ab";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_31
char str1[] = "abc";
char str2[] = "";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_32
char str1[] = " ";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_33
char str1[] = "abc";
char str2[] = " ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_34
char str1[] = "9087";
char str2[] = "657";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_35
char str1[] = "";
char str2[] = "";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_36
char str1[] = " ";
char str2[] = " ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_37
char str1[] = "abc ";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_38
char str1[] = "abc";
char str2[] = "abc ";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_39
char str1[] = " abc";
char str2[] = "abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_40
char str1[] = "abc";
char str2[] = " abc";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_41
char str1[] = "ahmat-sila";
char str2[] = "sila-ahmat";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_42
char str1[] = "6251";
char str2[] = "5194";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_43
char str1[] = "$K^G$J&^*";
char str2[] = "YNYTn5*3636";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_44
char str1[] = "Vechniye_";
char str2[] = "deti!";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strtok_1
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "c";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_2
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_3
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "a";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_4
char str1[] = "abb";
char str3[] = "abb";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_5
char str1[] = "bbc";
char str3[] = "bbc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_6
char str1[] = "aaabbcc";
char str3[] = "aaabbcc";
char str2[] = "c";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_7
char str1[] = "aaabbcc";
char str3[] = "aaabbcc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_8
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "d";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_9
char str1[] = "123";
char str3[] = "123";
char str2[] = "3";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_10
char str1[] = "123";
char str3[] = "123";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_11
char str1[] = "123";
char str3[] = "123";
char str2[] = "1";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_12
char str1[] = "123";
char str3[] = "123";
char str2[] = "4";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_13
char str1[] = "1123";
char str3[] = "1123";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_14
char str1[] = "1223";
char str3[] = "1223";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_15
char str1[] = "1\023";
char str3[] = "1\023";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_16
char str1[] = "1\023";
char str3[] = "1\023";
char str2[] = "2";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_17
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "b";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_18
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_19
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_20
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_21
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_22
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_23
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "b";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_24
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "c";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_ptr_eq(str4, str5);

#test strtok_25
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_26
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "n";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_27
char str1[] = "0987654546789";
char str3[] = "0987654546789";
char str2[] = "098767";
char *str4 = strtok(str1, str2);
char *str6 = strtok(s21_NULL, str2);
char *str5 = s21_strtok(str3, str2);
char *str7 = s21_strtok(s21_NULL, str2);
ck_assert_str_eq(str1, str3);
ck_assert_pstr_eq(str4, str5);
ck_assert_pstr_eq(str6, str7);

#test strtok_28
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "n";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_29
char str1[] = "aaaaaabnnabaaaaa";
char str3[] = "aaaaaabnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_30
char str1[] = "bnnabaaaaa";
char str3[] = "bnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);


#test strrchr_1
char str1[] = "abob1a";
int c = '1';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_2
char str1[] = "1561651695168518";
int c = '5';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_3
char str1[] = "ccrtgerE^TG^RTGerfgetGDRTg35#T$T";
int c = '5';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_4
char str1[] = "___XKjui87{____";
int c = 'X';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_5
char str1[] = "abc";
int n = 'a';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_6
char str1[] = "abc";
int n = 'd';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_7
char str1[] = "abc";
int n = '1';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_8
char str1[] = "abc";
int n = '\\';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_9
char str1[] = "";
int n = 'a';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_10
char str1[] = " ";
int n = 'a';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_11
char str1[] = " ";
int n = ' ';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_12
char str1[] = " ";
int n = '\\';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_13
char str1[] = "021";
int n = '0';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_14
char str1[] = "ab\nc";
int n = 'a';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_15
char str1[] = "ab\nc";
int n = '\n';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_16
char str1[] = "abc";
int n = '\0';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_17
char str1[] = "ab\0c";
int n = 'a';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_18
char str1[] = "ab\0c";
int n = '\0';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_19
char str1[] = "";
int n = '\0';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_20
char str1[] = "\0\0\0";
int n = '\0';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_21
char str1[] = " ";
int n = '\\';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_22
char str1[] = "";
int n = '\\';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_23
char str1[] = "ab,c";
int n = ',';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strrchr_24
char str1[] = "abcdefghijklmnopqrst";
int n = 't';
ck_assert_ptr_eq(strrchr(str1, n), s21_strrchr(str1, n));

#test strchr_1
char str1[] = "abc";
int n = 'a';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_2
char str1[] = "abc";
int n = 'd';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_3
char str1[] = "abc";
int n = '1';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_4
char str1[] = "abc";
int n = '\\';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_5
char str1[] = "";
int n = 'a';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_6
char str1[] = " ";
int n = 'a';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_7
char str1[] = " ";
int n = ' ';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_8
char str1[] = " ";
int n = '\\';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_9
char str1[] = "021";
int n = '0';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_10
char str1[] = "ab\nc";
int n = 'a';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_11
char str1[] = "ab\nc";
int n = '\n';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_12
char str1[] = "abc";
int n = '\0';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_13
char str1[] = "ab\0c";
int n = 'a';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_14
char str1[] = "ab\0c";
int n = '\0';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_15
char str1[] = "";
int n = '\0';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_16
char str1[] = "\0\0\0";
int n = '\0';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_17
char str1[] = " ";
int n = '\\';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_18
char str1[] = "";
int n = '\\';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_19
char str1[] = "ab,c";
int n = ',';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_20
char str1[] = "abcdefghijklmnopqrst";
int n = 't';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strchr_21
char str1[] = "abcdtefghijktlmnopqrst";
int n = 't';
ck_assert_ptr_eq(strchr(str1, n), s21_strchr(str1, n));

#test strstr_1
char str1[] = "0123456789";
char str2[] = "345";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_2
char str1[] = "aboba";
char str2[] = "b";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_3
char str1[] = "8888888XXXX88";
char str2[] = "X";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_4
char str1[] = "jvbnuo5nignte9orh89vher8";
char str2[] = "nig";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_5
char str1[] = "jvbnuo5nignte9orh89vher8";
char str2[] = "";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_6
char str1[] = "abc";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_7
char str1[] = "Abc";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_8
char str1[] = "abc";
char str2[] = "Abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_9
char str1[] = "abC";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_10
char str1[] = "abc";
char str2[] = "abC";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_11
char str1[] = "ABC";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_12
char str1[] = "abc";
char str2[] = "ABC";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_13
char str1[] = "a b c";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_15
char str1[] = "abc";
char str2[] = "a b c";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_16
char str1[] = "";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_17
char str1[] = "abc";
char str2[] = "";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_18
char str1[] = " ";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_19
char str1[] = "abc";
char str2[] = " ";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_20
char str1[] = "9087";
char str2[] = "657";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_21
char str1[] = "";
char str2[] = "";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_22
char str1[] = " ";
char str2[] = " ";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_23
char str1[] = "abc ";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_24
char str1[] = "abc";
char str2[] = "abc ";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_25
char str1[] = " abc";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_26
char str1[] = "abc";
char str2[] = " abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_27
char str1[] = "123";
char str2[] = "123";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_28
char str1[] = "123";
char str2[] = "321";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_29
char str1[] = "321";
char str2[] = "321";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_30
char str1[] = "321";
char str2[] = "123";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_31
char str1[] = "1234";
char str2[] = "123";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_32
char str1[] = "132";
char str2[] = "1234";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_33
char str1[] = "abcd";
char str2[] = "abc";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_34
char str1[] = "abc";
char str2[] = "abcd";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_35
char str1[] = "12ab";
char str2[] = "12ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_36
char str1[] = "ab12";
char str2[] = "12ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_37
char str1[] = "a\0b12";
char str2[] = "12ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_38
char str1[] = "ab12";
char str2[] = "12\0ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_39
char str1[] = "ab\012";
char str2[] = "1\02ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_40
char str1[] = "\0";
char str2[] = "\0";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_41
char str1[] = "\0";
char str2[] = "1\02ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_42
char str1[] = "";
char str2[] = "1\02ab";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strcat_1
char dest[20] = "bidon";
char src[] = "joe";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_2
char dest[20] = "4:20";
char src[] = "4:19";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_3
char dest[40] = "pants";
char src[] = "za 40 griven";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_4
char dest[50] = "435564536";
char src[] = "5195195561";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_5
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_6
char str1[9] = "abc\0";
char str2[9] = "abc\0";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_7
char str1[9] = "abc\n";
char str2[9] = "abc\n";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_8
char str1[9] = "ab\0c";
char str2[9] = "ab\0c";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_9
char str1[9] = "a\nbc";
char str2[9] = "a\nbc";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_10
char str1[9] = "abc ";
char str2[9] = "abc ";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_11
char str1[9] = " abc";
char str2[9] = " abc";
char str3[] = "def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_12
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = " def";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_13
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def ";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_14
char str1[9] = "abc";
char str2[9] = "abc";
char str3[] = "def00";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_15
char str1[9] = "";
char str2[9] = "";
char str3[] = "12\0";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_16
char str1[9] = "12\0";
char str2[9] = "12\0";
char str3[] = "";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_17
char str1[9] = "32\1";
char str2[9] = "32\1";
char str3[] = "";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_18
char str1[9] = "21\3c";
char str2[9] = "21\3c";
char str3[] = " ";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_19
char str1[9] = "1\n23";
char str2[9] = "1\n23";
char str3[] = "321";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_20
char str1[9] = "321";
char str2[9] = "321";
char str3[] = "123";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_21
char str1[9] = " ";
char str2[9] = " ";
char str3[] = " ";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_22
char str1[9] = "";
char str2[9] = "";
char str3[] = " ";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_23
char str1[9] = " ";
char str2[9] = " ";
char str3[] = "";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));

#test strcat_24
char str1[9] = "";
char str2[9] = "";
char str3[] = "";
ck_assert_str_eq(strcat(str1, str3), s21_strcat(str2, str3));


#test strspn_1
char str1[] = "devka za rulem";
char str2[] = "za";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_2
char str1[] = "0123456789";
char str2[] = "210";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_3
char str1[] = "GHtrH^$Y$GFD";
char str2[] = "^$Y";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_4
char str1[] = "zahashihzanashih";
char str2[] = "nashih";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_5
char str1[] = "abc";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_6
char str1[] = "Abc";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_7
char str1[] = "abc";
char str2[] = "Abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_8
char str1[] = "abC";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_9
char str1[] = "abc";
char str2[] = "abC";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_10
char str1[] = "ABC";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_11
char str1[] = "abc";
char str2[] = "ABC";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_12
char str1[] = "a b c";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_13
char str1[] = "abc";
char str2[] = "a b c";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_14
char str1[] = "";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_15
char str1[] = "abc";
char str2[] = "";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_16
char str1[] = " ";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_17
char str1[] = "abc";
char str2[] = " ";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_18
char str1[] = "9087";
char str2[] = "657";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_19
char str1[] = "";
char str2[] = "";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_20
char str1[] = " ";
char str2[] = " ";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_21
char str1[] = "abc ";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_22
char str1[] = "abc";
char str2[] = "abc ";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_23
char str1[] = " abc";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_24
char str1[] = "abc";
char str2[] = " abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_25
char str1[] = "123";
char str2[] = "123";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_26
char str1[] = "123";
char str2[] = "321";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_27
char str1[] = "321";
char str2[] = "321";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_28
char str1[] = "321";
char str2[] = "123";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_29
char str1[] = "1234";
char str2[] = "123";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_30
char str1[] = "132";
char str2[] = "1234";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_31
char str1[] = "abcd";
char str2[] = "abc";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_32
char str1[] = "abc";
char str2[] = "abcd";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_33
char str1[] = "12ab";
char str2[] = "12ab";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_34
char str1[] = "ab12";
char str2[] = "12ab";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_35
char str1[] = "a231546yutiljkhgtyre565786oiu;jlkhb12";
char str2[] = "12333333333333333333333333333333333ab";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

