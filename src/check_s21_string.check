#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include "s21_string.h"
#include "s21_sprintf.h"

#test memmove_1
char dest[] = "123";
char str1[] = "abc";
size_t n = 3;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_2
char dest[] = "123";
char str1[] = "abc";
size_t n = 2;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_3
char dest[] = "123456";
char str1[] = "abc";
size_t n = 3;
ck_assert_ptr_eq(memmove(dest, str1, n), s21_memmove(dest, str1, n));

#test memmove_4
char dest[] = "lolkek";
size_t n = 3;
ck_assert_ptr_eq(memmove(&dest[2], &dest[0], n), s21_memmove(&dest[2], &dest[0], n));

#test memchr_1
char str1[] = "abc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_2
char str1[] = "abc";
int c = 'b';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_3
char str1[] = "abc";
int c = 'c';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_4
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_5
char str1[] = "abc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_6
char str1[] = "abc";
int c = 'b';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_7
char str1[] = "abc";
int c = 'c';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_8
char str1[] = "abc";
int c = 'a';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_9
char str1[] = "abc";
int c = 'b';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_10
char str1[] = "abc";
int c = 'c';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_11
char str1[] = "abc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_12
char str1[] = "abc";
int c = 'a';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_13
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_14
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_15
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_16
char str1[] = "abc";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_17
char str1[] = "abc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_18
char str1[] = "abc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_19
char str1[] = "";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_20
char str1[] = "";
int c = '\0';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_21
char str1[] = " ";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_22
char str1[] = "abcabc";
int c = 'b';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_23
char str1[] = "abcabc";
int c = 'c';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_24
char str1[] = "abcabc";
int c = 'd';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_25
char str1[] = "abcabc";
int c = 'a';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_26
char str1[] = "abcabc";
int c = 'b';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_27
char str1[] = "abcabc";
int c = 'c';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_28
char str1[] = "abcabc";
int c = 'a';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_29
char str1[] = "abcabc";
int c = 'b';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_30
char str1[] = "abcabc";
int c = 'c';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_31
char str1[] = "abcabc";
int c = 'a';
size_t n = 5;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_32
char str1[] = "abcabc";
int c = 'a';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_33
char str1[] = "abcabc";
int c = 'd';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_34
char str1[] = "abcabc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_35
char str1[] = "abcabc";
int c = 'd';
size_t n = 2;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_36
char str1[] = "abcabc";
int c = 'd';
size_t n = 1;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_37
char str1[] = "abcabc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_38
char str1[] = "abcabc";
int c = 'd';
size_t n = 0;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_39
char str1[] = "abcabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_40
char str1[] = "abc\nabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_41
char str1[] = "abc\0abc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_42
char str1[] = "\0abcabc";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memchr_43
char str1[] = "abcabc\0";
int c = 'a';
size_t n = 3;
ck_assert_ptr_eq(memchr(str1, c, n), s21_memchr(str1, c, n));

#test memcmp_1
char str1[] = "abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_2
char str1[] = "Abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_3
char str1[] = "abc";
char str2[] = "Abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_4
char str1[] = "abC";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_5
char str1[] = "abc";
char str2[] = "abC";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_6
char str1[] = "ABC";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_7
char str1[] = "abc";
char str2[] = "ABC";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_8
char str1[] = "a b c";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_9
char str1[] = "abc";
char str2[] = "a b c";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_10
char str1[] = "";
char str2[] = "abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_11
char str1[] = "abc";
char str2[] = "";
int n = 1;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_12
char str1[] = " ";
char str2[] = "abc";
int n = 1;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_13
char str1[] = "abc";
char str2[] = " ";
int n = 2;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_14
char str1[] = "9087";
char str2[] = "657";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_15
char str1[] = "";
char str2[] = "";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_16
char str1[] = " ";
char str2[] = " ";
int n = 2;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_17
char str1[] = "abc ";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_18
char str1[] = "abc";
char str2[] = "abc ";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_19
char str1[] = " abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_20
char str1[] = "abc";
char str2[] = " abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_21
char str1[] = "123";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_22
char str1[] = "123";
char str2[] = "321";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_23
char str1[] = "321";
char str2[] = "321";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_24
char str1[] = "321";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_25
char str1[] = "1234";
char str2[] = "123";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_26
char str1[] = "132";
char str2[] = "1234";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_27
char str1[] = "abcd";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_28
char str1[] = "abc";
char str2[] = "abcd";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_29
char str1[] = "12ab";
char str2[] = "12ab";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_30
char str1[] = "ab12";
char str2[] = "12ab";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_31
char str1[] = "abc";
char str2[] = "abc";
int n = 3;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_32
char str1[] = "Abc";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_33
char str1[] = "abc";
char str2[] = "Abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_34
char str1[] = "abC";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_35
char str1[] = "abc";
char str2[] = "abC";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_36
char str1[] = "ABC";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_37
char str1[] = "abc";
char str2[] = "ABC";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_38
char str1[] = "a b c";
char str2[] = "abc";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_39
char str1[] = "abc";
char str2[] = "a b c";
int n = 4;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_40
char str1[] = "abc";
char str2[] = " abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_41
char str1[] = "123";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_42
char str1[] = "123";
char str2[] = "321";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_43
char str1[] = "321";
char str2[] = "321";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_44
char str1[] = "321";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_45
char str1[] = "1234";
char str2[] = "123";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_46
char str1[] = "132";
char str2[] = "1234";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_47
char str1[] = "abcd";
char str2[] = "abc";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_48
char str1[] = "abc";
char str2[] = "abcd";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_49
char str1[] = "12ab";
char str2[] = "12ab";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test memcmp_50
char str1[] = "ab12";
char str2[] = "12ab";
int n = 0;
ck_assert_int_eq(memcmp(str1, str2, n), s21_memcmp(str1, str2, n));

#test strncpy_5
char dest[50] = "hohol";
char src[8] = "vatnik";
size_t n = 10;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncmp_5
char str1[] = "12345";
char str2[] = "12345";
size_t n = 10;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test memset_1
char str1[] = "1234567890";
int c = '1';
size_t n = 10;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_2
char str1[] = "obama";
int c = 'e';
size_t n = 1;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_3
char str1[] = "14785";
int c = 'e';
size_t n = 4;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test memset_4
char str1[] = "shrek=love";
int c = '*';
size_t n = 5;
ck_assert_ptr_eq(memset(str1, c, n), s21_memset(str1, c, n));

#test strncat_1
char dest[10] = "bidon";
char src[10] = "joe";
size_t n = 3;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_2
char dest[10] = "4:20";
char src[10] = "4:19";
size_t n = 3;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_3
char dest[50] = "pants";
char src[20] = "za 40 griven";
size_t n = 5;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strncat_4
char dest[30] = "435564536";
char src[30] = "5195195561";
size_t n = 8;
ck_assert_ptr_eq(strncat(dest, src, n), s21_strncat(dest, src, n));

#test strcmp_1
char str1[] = "12345";
char str2[] = "12345";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_2
char str1[] = "zrada";
char str2[] = "peremoga";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_3
char str1[] = "8888";
char str2[] = "XX";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcmp_4
char str1[] = "1234567890";
char str2[] = "1234567809";
ck_assert_int_eq(strcmp(str1, str2), s21_strcmp(str1, str2));

#test strcpy_1
char dest[] = "ahmat sila";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_2
char dest[] = "625159151";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_3
char dest[] = "$K^G$J&^*";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strcpy_4
char dest[] = "Vechniye_deti!";
char src[] = "";
ck_assert_ptr_eq(strcpy(dest, src), s21_strcpy(dest, src));

#test strncpy_1
char dest[] = "ahmat";
char src[] = "sila";
size_t n = 3;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_2
char dest[] = "6251";
char src[] = "5494";
size_t n = 2;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_3
char dest[] = "$K^G$J&^*";
char src[] = "YNYTn53636";
size_t n = 4;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncpy_4
char dest[] = "Vechniye_";
char src[] = "deti!";
size_t n = 1;
ck_assert_ptr_eq(strncpy(dest, src, n), s21_strncpy(dest, src, n));

#test strncmp_1
char str1[] = "12345";
char str2[] = "12345";
size_t n = 5;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_2
char str1[] = "zrada";
char str2[] = "peremoga";
size_t n = 4;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_3
char str1[] = "8888";
char str2[] = "XX";
size_t n = 1;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));

#test strncmp_4
char str1[] = "1234567890";
char str2[] = "1234567809";
size_t n = 3;
ck_assert_int_eq(strncmp(str1, str2, n), s21_strncmp(str1, str2, n));


#test strcspn_1
char str1[] = "devkazarulem";
char str2[] = "mel";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_2
char str1[] = "01823456789";
char str2[] = "9876";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_3
char str1[] = "GHtrH^$Y$GFD";
char str2[] = "^$Y";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strcspn_4
char str1[] = "zahashihzanashih";
char str2[] = "nashih";
ck_assert_int_eq(strcspn(str1, str2), s21_strcspn(str1, str2));

#test strpbrk_1
char str1[] = "ahmat-sila";
char str2[] = "sila-ahmat";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_2
char str1[] = "6251";
char str2[] = "5194";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_3
char str1[] = "$K^G$J&^*";
char str2[] = "YNYTn5*3636";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strpbrk_4
char str1[] = "Vechniye_";
char str2[] = "deti!";
ck_assert_ptr_eq(strpbrk(str1, str2), s21_strpbrk(str1, str2));

#test strtok_1
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "c";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_2
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_3
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "a";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_4
char str1[] = "abb";
char str3[] = "abb";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_5
char str1[] = "bbc";
char str3[] = "bbc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_6
char str1[] = "aaabbcc";
char str3[] = "aaabbcc";
char str2[] = "c";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_7
char str1[] = "aaabbcc";
char str3[] = "aaabbcc";
char str2[] = "b";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_8
char str1[] = "abc";
char str3[] = "abc";
char str2[] = "d";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_9
char str1[] = "123";
char str3[] = "123";
char str2[] = "3";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_10
char str1[] = "123";
char str3[] = "123";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_11
char str1[] = "123";
char str3[] = "123";
char str2[] = "1";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_12
char str1[] = "123";
char str3[] = "123";
char str2[] = "4";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_13
char str1[] = "1123";
char str3[] = "1123";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_14
char str1[] = "1223";
char str3[] = "1223";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_15
char str1[] = "1\023";
char str3[] = "1\023";
char str2[] = "2";
ck_assert_str_eq(strtok(str1, str2), s21_strtok(str3, str2));

#test strtok_16
char str1[] = "1\023";
char str3[] = "1\023";
char str2[] = "2";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_17
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "b";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_18
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_19
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_20
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_21
char str1[] = "ababa";
char str3[] = "ababa";
char str2[] = "a";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_22
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_23
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "b";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_24
char str1[] = "abababa";
char str3[] = "abababa";
char str2[] = "c";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_ptr_eq(str4, str5);

#test strtok_25
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
char *str4 = strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
char *str5 = s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_26
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "n";
strtok(str1, str2);
char *str4 = strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
char *str5 = s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str4, str5);

#test strtok_27
char str1[] = "0987654546789";
char str3[] = "0987654546789";
char str2[] = "098767";
char *str4 = strtok(str1, str2);
char *str6 = strtok(s21_NULL, str2);
char *str5 = s21_strtok(str3, str2);
char *str7 = s21_strtok(s21_NULL, str2);
ck_assert_str_eq(str1, str3);
ck_assert_pstr_eq(str4, str5);
ck_assert_pstr_eq(str6, str7);

#test strtok_28
char str1[] = "ababnnabaaaaa";
char str3[] = "ababnnabaaaaa";
char str2[] = "n";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_29
char str1[] = "aaaaaabnnabaaaaa";
char str3[] = "aaaaaabnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);

#test strtok_30
char str1[] = "bnnabaaaaa";
char str3[] = "bnnabaaaaa";
char str2[] = "a";
strtok(str1, str2);
strtok(NULL, str2);
strtok(NULL, str2);
s21_strtok(str3, str2);
s21_strtok(NULL, str2);
s21_strtok(NULL, str2);
ck_assert_str_eq(str1, str3);


#test strrchr_1
char str1[] = "abob1a";
int c = '1';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_2
char str1[] = "1561651695168518";
int c = '5';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_3
char str1[] = "ccrtgerE^TG^RTGerfgetGDRTg35#T$T";
int c = '5';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strrchr_4
char str1[] = "___XKjui87{____";
int c = 'X';
ck_assert_ptr_eq(strrchr(str1, c), s21_strrchr(str1, c));

#test strstr_1
char str1[] = "0123456789";
char str2[] = "345";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_2
char str1[] = "aboba";
char str2[] = "b";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_3
char str1[] = "8888888XXXX88";
char str2[] = "X";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_4
char str1[] = "jvbnuo5nignte9orh89vher8";
char str2[] = "nig";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strstr_5
char str1[] = "jvbnuo5nignte9orh89vher8";
char str2[] = "";
ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test strcat_1
char dest[20] = "bidon";
char src[] = "joe";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_2
char dest[20] = "4:20";
char src[] = "4:19";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_3
char dest[40] = "pants";
char src[] = "za 40 griven";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strcat_4
char dest[50] = "435564536";
char src[] = "5195195561";
ck_assert_ptr_eq(strcat(dest, src), s21_strcat(dest, src));

#test strspn_1
char str1[] = "devka za rulem";
char str2[] = "za";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_2
char str1[] = "0123456789";
char str2[] = "210";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_3
char str1[] = "GHtrH^$Y$GFD";
char str2[] = "^$Y";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strspn_4
char str1[] = "zahashihzanashih";
char str2[] = "nashih";
ck_assert_int_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test strerror_1
int errnum = 10;
ck_assert_str_eq(strerror(errnum), s21_strerror(errnum));

#test strerror_2
int errnum = 120;
ck_assert_str_eq(strerror(errnum), s21_strerror(errnum));

#test strerror_3
int errnum = -5;
ck_assert_str_eq(strerror(errnum), s21_strerror(errnum));

#test strerror_4
int errnum = 170;
ck_assert_str_eq(strerror(errnum), s21_strerror(errnum));
